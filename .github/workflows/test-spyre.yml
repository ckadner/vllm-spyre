name: test-spyre

on:
  pull_request:
  push:
  workflow_dispatch:

env:
  # force output to be colored for non-tty GHA runner shell
  FORCE_COLOR: "1"
  VLLM_SPYRE_TEST_MODEL_DIR: "${{ github.workspace }}/models"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    timeout-minutes: 20
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python_version: ["3.12"]
        vllm_version:
          - name: "vLLM:v0.8.0"
            repo: "https://github.com/vllm-project/vllm.git"
            rev: "v0.8.0"
          - name: "vLLM:main"
            repo: "https://github.com/vllm-project/vllm.git"
            rev: "main"
          - name: "ODH:main"
            repo: "https://github.com/opendatahub-io/vllm.git"
            rev: "main"
        test_suite:
          - name: "V0"
            tests: "V0 and eager"
            flags: "--timeout=300"
          - name: "V1"
            tests: "(V1- and eager) or test_sampling_metadata_in_input_batch"
            flags: "--timeout=300 --forked"
        exclude:
          - vllm_version: { name: "vLLM:main" }
            test_suite:   { name: "V1" }
          - vllm_version: { name: "ODH:main" }
            test_suite:   { name: "V1" }

    name: "${{ matrix.test_suite.name }} (${{ matrix.vllm_version.name }})"

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      # since GH action runners are one-and-done, we can install all requirements
      # into the system packages directory and cache all installed Python packages
      # instead of using the pip cache
      - name: "Cache Python packages"
        uses: actions/cache@v4
        id: python-cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-test.txt') }}
          restore-keys:
            ${{ runner.os }}-${{ env.pythonLocation }}-

      - name: "Install PyTorch"
        if: steps.python-cache.outputs.cache-hit != 'true'
        run: |
          pip install torch=="2.5.1+cpu" --index-url https://download.pytorch.org/whl/cpu

      - name: "Install uv"
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          python-version: ${{ matrix.python_version }}
          enable-cache: true
          ignore-nothing-to-cache: true
          cache-dependency-glob: |
            pyproject.toml
            uv.lock

      - name: "Install vLLM with Spyre plugin"
        env:
          VLLM_TARGET_DEVICE: empty
          UV_EXTRA_INDEX_URL: "https://download.pytorch.org/whl/cpu"
          UV_INDEX_STRATEGY: "unsafe-best-match"
        run: |
          # PyTorch CPU wheels don't have markupsafe==3.0.2 python 3.12 (only cp313)
          uv add markupsafe --index force_pypi_index=https://pypi.org/simple
          uv add ${{ matrix.vllm_version.repo }}
          uv venv .venv --system-site-packages
          source .venv/bin/activate
          uv pip install -v -e . --system
          uv sync --frozen --group dev

      - name: "Download HF models"
        run: |
          mkdir -p "${VLLM_SPYRE_TEST_MODEL_DIR}"
          
          source .venv/bin/activate
          
          uv run python -c "from transformers import pipeline; pipeline(\"text-generation\", model=\"JackFram/llama-160m\")"
          VARIANT=$(ls ~/.cache/huggingface/hub/models--JackFram--llama-160m/snapshots/)
          ln -s ~/.cache/huggingface/hub/models--JackFram--llama-160m/snapshots/"${VARIANT}" "${VLLM_SPYRE_TEST_MODEL_DIR}/llama-194m"
          
          uv run python -c "from sentence_transformers import SentenceTransformer; SentenceTransformer(\"sentence-transformers/all-roberta-large-v1\")"
          VARIANT=$(ls ~/.cache/huggingface/hub/models--sentence-transformers--all-roberta-large-v1/snapshots/)
          ln -s ~/.cache/huggingface/hub/models--sentence-transformers--all-roberta-large-v1/snapshots/"${VARIANT}" "${VLLM_SPYRE_TEST_MODEL_DIR}/all-roberta-large-v1"

      - name: "Run tests"
        env:
          MASTER_PORT: 12355
          MASTER_ADDR: localhost
          DISTRIBUTED_STRATEGY_IGNORE_MODULES: WordEmbedding
          VLLM_PLUGINS: spyre
        run: |
          source .venv/bin/activate
          uv run pytest ${{ matrix.test_suite.flags }} \
            tests -v -k "${{ matrix.test_suite.tests }}"
