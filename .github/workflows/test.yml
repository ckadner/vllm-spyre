name: Test

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  # force output to be colored for non-tty GHA runner shell
  FORCE_COLOR: "1"
  # facilitate testing by building vLLM for CPU when needed
  VLLM_CPU_DISABLE_AVX512: "true"
  VLLM_TARGET_DEVICE: "cpu"
  VLLM_PLUGINS: "spyre"
  # prefer index for torch cpu version
  UV_EXTRA_INDEX_URL: "https://download.pytorch.org/whl/cpu"
  # have uv match pip's behaviour for extra index operations
  UV_INDEX_STRATEGY: "unsafe-best-match"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    timeout-minutes: 20
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        pyv: ["3.12"]
        vllm_version:
          # skip the pypi version as it will not work on CPU
          - "git+https://github.com/vllm-project/vllm --tag v0.8.0"
#          - "git+https://github.com/vllm-project/vllm --branch main"
#          - "git+https://github.com/opendatahub-io/vllm --branch main"
        test_suite:
          - name: "V0 and eager"
            flags: "--timeout=300"
          - name: "(V1- and eager) or test_sampling_metadata_in_input_batch"
            flags: "--timeout=300 --forked"

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Cache the ccache cache directory"
        id: ccache-cache
        uses: actions/cache@v4
        with:
          path: /home/runner/.cache/ccache
          key: ${{ runner.os }}

      - name: "Cache HuggingFace hub cache"
        id: hf-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/huggingface/hub
          key: ${{ runner.os }}

      - name: "Install build dependencies"
        run: |
          sudo apt update
          sudo apt install --no-install-recommends -y \
            ccache \
            libnuma-dev \
            libdnnl-dev \
            opencl-dev

      - name: "Install PyTorch"
        run: |
          pip install torch==2.5.1+cpu --index-url https://download.pytorch.org/whl/cpu

      - name: "Install uv"
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          python-version: ${{ matrix.pyv }}
          enable-cache: true
#          ignore-nothing-to-cache: true
          cache-dependency-glob: |
            pyproject.toml

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml

      - name: "Install vLLM with Spyre plugin"
        env:
          VLLM_TARGET_DEVICE: empty
        run: |
          # markupsafe==3.0.2 @ https://download.pytorch.org/whl/cpu only has wheels for cp313, not python 3.12
          uv add markupsafe --index force_pypi_index=https://pypi.org/simple
          uv add ${{ matrix.vllm_version }}
          uv pip install -v -e . --system
          uv sync --frozen --group dev

      - name: "Download HF models"
        run: |
          mkdir -p /models
          python -c "from transformers import pipeline; pipeline(\"text-generation\", model=\"JackFram/llama-160m\")"
          VARIANT=$(ls /root/.cache/huggingface/hub/models--JackFram--llama-160m/snapshots/)
          ln -s "/root/.cache/huggingface/hub/models--JackFram--llama-160m/snapshots/${VARIANT}" /models/llama-194m
          python -c "from sentence_transformers import SentenceTransformer; SentenceTransformer(\"sentence-transformers/all-roberta-large-v1\")"
          VARIANT=$(ls /root/.cache/huggingface/hub/models--sentence-transformers--all-roberta-large-v1/snapshots/)
          ln -s "/root/.cache/huggingface/hub/models--sentence-transformers--all-roberta-large-v1/snapshots/${VARIANT}" /models/all-roberta-large-v1

      - name: "Run tests"
        env:
          MASTER_PORT: 12355
          MASTER_ADDR: localhost
          DISTRIBUTED_STRATEGY_IGNORE_MODULES: WordEmbedding
        run: |
          cd vllm-spyre
          uv run pytest ${{ matrix.test_suite.flags }} \
            tests -v -k ${{ matrix.test_suite.name }}
